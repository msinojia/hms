1. Find machines which are being overused. (Consider a machine to be overused if it has been used more than K times a day for past one week).

2. Find machines which are being underused. (Consider a machine to be underused if it has been used less than 2 times a day for past one week).

3. Give details of all rooms that are currently vacant.

4. Details of all doctors who are currently attending more than or equal to 5 admitted patients.

5. Details of all admitted patients along with the allocated room numbers and doctors and nurses currently attending them.

6. Frequency of all tests performed in past 30 Days.

7. Details of all doctors who are in Cardiology department and are working in this hospital for more than 5 years, having salary less than 15 LPA.

8. Yearly revenue generated by the hospital for past 5 years (Revenue = total of all bill amounts).

9. Details of all previous treatments of patient with ID '1' (one) at this hospital (Doctor attended, bill paid, disease/injury, date of visit/admission).

10. Details of all patients who were admitted in the hospital more than 10 days ago and have not been discharged yet. (Required: Patient details + admission date + disease/injury)

11. Total number of treatments for each month in the previous year.

12. Find average treatment cost for Dengue in this hospital.



ANSWERS:::

1.

select * from 
(select count(*)as freq,machine  from(
select * from test_type natural join test_machines join
(select * from test_log where now()::date - test_log.timestamp::date <=30) as x
on x.test_type = test_type.test_name
)as z
group by machine)as w where w.freq>3;




2.

select * from 
(select count(*)as freq,machine  from(
select * from test_type natural join test_machines join
(select * from test_log where now()::date - test_log.timestamp::date <=30) as x
on x.test_type = test_type.test_name
)as z
group by machine)as w where w.freq<=3;



3.

select * from Room natural join
(select room_no,block from  Room 
 except
 select room_no,block from in_patient_treatment where discharge_date is NULL)as r1;


 
4.

select emp_id, doc_qualification as qualification, doc_specialization as specialization, 
consultation_fee, no_of_patients, e_name as doctor_name 
from employee as e natural join (
	select * from doctor as d join (
    	select count(*) as no_of_patients, doctor_assigned from (
        	select * from treatment natural join (
            	select * from in_patient_treatment where discharge_date is null
            ) as r1
        ) as r2 group by doctor_assigned having count(*) >= 5 
    ) as r3 on d.emp_id = r3.doctor_assigned 
) as r4;



5.

select patient_id,e_name as doctor,disease_or_injury,admission_date,room_no,block,nurse from (
employee as e join 
(select r4.*, e1.e_name as nurse from 
 (select * from nurse_shift as ns right join 
 	(select * from treatment natural join 
 		(select * from in_patient_treatment where discharge_date is NULL)as r2
 	)
  as r3 on ns.treatment_id = r3.treatment_id AND end_time is NULL
 )as r4
 natural join employee as e1)as r5  
on e.emp_id = r5.doctor_assigned 
)as r6;



6.
select count(*)as freq,test_type from 
(select * from test_log where now()::date - test_log.timestamp::date <=30) as r1
group by test_type



7.

select * from employee as e join department as d on d.d_name ='Cardiology'
AND e.department_id = d.did 
AND (select extract (year from now())-(select  extract ( year from e.joining_date))) >=5
AND e.salary<=1500000
AND leaving_date is null;



8.
select year,in_sum+out_sum as revenue from
(
 select * from
(select year,sum(total_cost) as in_sum from 
(select r1.*,(select extract(year from op.visit_date))as year from 
(select * from bill where is_paid =true)as r1
 natural join 
 out_patient_treatment as op
)as r2 group by r2.year
) as r3 
natural join
(
 select year,sum(total_cost) as out_sum from
 (select r1.*,(select extract(year from ip.discharge_date))as year from 
 (select * from bill where is_paid = true) as r1
  natural join in_patient_treatment as ip
 )as r4 group by r4.year
) as r5
)as r6 order by year desc limit 5




9.

select treatment_id, date, patient_type, disease_or_injury, 
doctor_assigned as doctor_id, doctor_name, bill_amount
from (
	select * from (
    	select r3.*, ip.admission_date as date from in_patient_treatment as ip natural join
        (
        	select r2.*, e.e_name as doctor_name from
            doctor as d natural join employee as e join 
            (
            	select r1.*, total_cost as bill_amount from bill natural join 
                (
                	select * from treatment where treatment_id = 1
                ) as r1
            ) as r2 on r2.doctor_assigned = d.emp_id
        ) as r3
    ) as r4
    union
    select * from (
    	select r3.*, op.visit_date as date from out_patient_treatment as op natural join
        (
        	select r2.*, e.e_name as doctor_name from
            doctor as d natural join employee as e join 
            (
            	select r1.*, total_cost as bill_amount from bill natural join 
                (
                	select * from treatment where treatment_id = 1
                ) as r1
            ) as r2 on r2.doctor_assigned = d.emp_id
        ) as r3
    ) as r5
) as r6;




10.

select * from (
select p.*, r1.admission_date, t.disease_or_injury from (
	select * from in_patient_treatment where discharge_date is null
) as r1
natural join treatment as t
natural join patient as p
) as r2 
where now()::date - admission_date > 10;



11. 

select month, count(*) as no_of_treatments from (
    select * from (
        select * from 
        (
            select treatment_id, 
            (select extract(month from ip.admission_date)) as month,
            (select extract(year from ip.admission_date)) as year
            from in_patient_treatment as ip
        ) as r1
        union
        select * from
        (
            select treatment_id, 
            (select extract(month from op.visit_date)) as month,
            (select extract(year from op.visit_date)) as year
            from out_patient_treatment as op
        ) as r2
    ) as r3 where year = date_part('year', CURRENT_DATE) - 1
) as r4 group by month;



12.

select avg(total_cost) as average_dengue_cost from(
    select * from (
    	select * from treatment where disease_or_injury = 'Dengue'
    ) as r1 natural join bill
) as r2;

